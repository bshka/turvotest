apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.itechart.turvotest"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "ALPHA_API_KEY", "\"${getProperty("local.properties", "alpha_api_key")}\""
        buildConfigField "String", "TRADIER_API_KEY", "\"${getProperty("local.properties", "tradier_api_key")}\""
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation "androidx.preference:preference-ktx:1.1.0-rc01"

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // chart
    implementation 'com.diogobernardino:williamchart:3.0'

    // retrofit
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation "com.squareup.retrofit2:converter-gson:2.6.1"
    implementation "com.squareup.okhttp3:okhttp:4.1.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.1.0"

    // rxjava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:2.2.12"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.1'

    // view model and life cycle
    implementation "androidx.lifecycle:lifecycle-runtime:2.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.0.0"

    // navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.0.0'

    // koin
    implementation "org.koin:koin-android:2.0.1"
    implementation "org.koin:koin-androidx-scope:2.0.1"
    implementation "org.koin:koin-androidx-viewmodel:2.0.1"

    // logging
    implementation "com.jakewharton.timber:timber:4.7.1"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}
